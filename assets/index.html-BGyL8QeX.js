import{_ as e,c as o,a as s,o as n}from"./app-CHQIiBnY.js";const r={};function a(i,t){return n(),o("div",null,t[0]||(t[0]=[s("<ol><li><p><strong>标记—清除法</strong></p><p>​ <strong>工作原理</strong>：遍历堆中的对象，标记当前存活的对象，然后清除未被标记的对象；</p><p>​ <strong>优点</strong>：实现简单，可以遍历堆中所有对象；</p><p>​ <strong>缺点</strong>：会产生很多内存碎片，影响后续内存分配的效率。</p></li><li><p><strong>标记—整理法</strong></p><p>​ <strong>工作原理</strong>：首先标记所有存活对象，将所有存活对象整理到一边，再删除未被标记的对象；</p><p>​ <strong>优点</strong>：避免了内存碎片问题；</p><p>​ <strong>缺点</strong>：整理阶段需要移动对象，导致额外的开销。</p></li><li><p><strong>复制法</strong></p><p>​ <strong>工作原理</strong>：将内存分为两半，每次只使用一半，垃圾回收时将存活对象复制到另一边，清除原区域所有对象；</p><p>​ <strong>优点</strong>：无需处理内存碎片，分配效率高</p><p>​ <strong>缺点</strong>：浪费一半的空间。</p></li></ol>",1)]))}const p=e(r,[["render",a],["__file","index.html.vue"]]),m=JSON.parse(`{"path":"/study/aqk680p7/","title":"014、java 中的垃圾回收算法","lang":"zh-CN","frontmatter":{"title":"014、java 中的垃圾回收算法","author":null,"createTime":"2025/03/13 14:50:45","permalink":"/study/aqk680p7/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[],"readingTime":{"minutes":0.79,"words":237},"git":{"updatedTime":1742275029000,"contributors":[{"name":"洪子丹","email":"302778213@qq.com","commits":1}]},"filePathRelative":"notes/study/recite/014、java 中的垃圾回收算法.md"}`);export{p as comp,m as data};
