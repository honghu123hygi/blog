import{_ as r,c as e,a as o,o as s}from"./app-CHQIiBnY.js";const i={};function n(a,t){return s(),e("div",null,t[0]||(t[0]=[o('<p>Disruptor 是 LMAX 公司开源的一个 <strong>高性能无锁环形队列</strong> 框架，常用于<strong>高并发</strong>、低延迟的消息处理场暑。它通过<strong>环形缓冲区</strong>+<strong>无锁</strong>(CAS +内存屏障)减少线程切换，来显著提升吞吐量。</p><p>在协同编辑中，后端 WebSocket原本同步接收和处理消息，若并发用户多、单条消息处理释时长，就易造成明赛，无法处理更多请求，引入 Disuptor 后，将消息生产与消息处理解耦：</p><ol><li>原本的处理消息逻辑修改为 ”仅把消息提交到 Disruptor 队列“</li><li>由 Disruptor 的消费者线程异步取出并执行具体业务逻辑</li></ol><p>项目中具体流程如下：</p><ol><li>引入 Disruptor 依赖</li><li>定义事件，承载编辑请求、 WebSocket Session、用户信息等；</li><li>定义事件处理器，用于消费编辑事件并调用相应的业务逻辑；</li><li>在启动时初始化 Disruptor ，初始化固定大小的环形队列，把事件处理器加入消费者池；</li><li>WebSocket 收到消息后，把它发布到 Disruptor 的环形队列；</li><li>Disruptor 内部会多线程异步执行事件。</li></ol><h3 id="disruptor-优雅停机" tabindex="-1"><a class="header-anchor" href="#disruptor-优雅停机"><span><strong>Disruptor 优雅停机</strong></span></a></h3><p>优雅停机指在应用关闭前，<strong>不再接收新的请求从</strong> 并 <strong>等待系统中正在进行的任务全部完成后</strong>，才真正停止进程。确保数据和状态不会在停机时刻中断或丢失。</p><p>Disruptor 本身提供了优雅停机方法。可利用 Bean 的 PreDestroy 注解，在应用关闭前，先调用 disruptor.shutdown() ，然后 Disruptor 会等待环形队列内所有事件处理完才返回，同时拒绝所有新的编辑操作请求。等到队列内所有任务都消费完成，再关闭资源池和资源连接，最后退出应用。</p>',8)]))}const c=r(i,[["render",n],["__file","index.html.vue"]]),p=JSON.parse(`{"path":"/study/8tkusv0q/","title":"07、什么是 Disruptor ？在项目中为什么要使用它，具体流程是什么？","lang":"zh-CN","frontmatter":{"title":"07、什么是 Disruptor ？在项目中为什么要使用它，具体流程是什么？","author":null,"createTime":"2025/02/17 17:02:51","permalink":"/study/8tkusv0q/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":3,"title":"Disruptor 优雅停机","slug":"disruptor-优雅停机","link":"#disruptor-优雅停机","children":[]}],"readingTime":{"minutes":1.66,"words":497},"git":{"updatedTime":1740622614000,"contributors":[{"name":"洪子丹","email":"302778213@qq.com","commits":1}]},"filePathRelative":"notes/study/project/07.md"}`);export{c as comp,p as data};
