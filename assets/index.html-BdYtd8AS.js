import{_ as l,c as t,b as i,a,d as e,o as h}from"./app-CHQIiBnY.js";const n={};function k(r,s){return h(),t("div",null,s[0]||(s[0]=[i("h1",{id:"影响数据库的查询效率以及优化",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#影响数据库的查询效率以及优化"},[i("span",null,"影响数据库的查询效率以及优化")])],-1),i("p",null,"1、 sql语句",-1),i("ul",null,[i("li",null,[i("p",null,"select * 会导致查询速度变慢，要返回的字段越多，查询效率更低。优化：尽量用需要的字段来代替*，这样可以提高查询效率")]),i("li",null,[i("p",null,"两个表先进行自然连接，在进行where条件筛选出符合条件的记录会导致查询速度变慢。优化：可以在在进行连表查询查询的时候，进行先用where进行筛选出符合条件的记录，然后再进行连表操作")]),i("li",null,[i("p",null,"没有索引的时候都也可能会导致查询速度变慢，优化方式：在合适的列上建立索引，为什么说是合适的列呢，因为如果在性别这种大量重复值的字段上建立索引的话，并不能提高查询效率。如果某个字段是唯一性的，就可以直接创建唯一性索引，或者主键索引。这样可以更快速地通过该索引来确定某条记录。例如，学生表中学号是具有唯一性的字段，为该字段建立唯一性索引可以很快确定某个学生的信息，如果使用姓名的话，可能存在同名现象，从而降低查询速度。索引尽量建立在where、Order by、group by 后面常用的条件列上面建立索引，也能提高查询速度。")]),i("li",null,[i("p",null,"大表查询会导致查询速度变慢，优化：将大表进行分割小表，然后进入某张小表进行查询，比如一张表有10万条记录而且他们的id都是从1-10万依次递增的，这时就可以根据id进行分成若干张小表。将id0-1万的记录放在第一张表，id1-2万放在另外一张小表，以此类推分割成十张小表，现在我想查询第5000条记录，就在第一张表进行查询即可"),i("p",null,"where 使用了in关键字进行查询，会导致查询速度变慢。优化方式：可以使用exist或者between代替in。"),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"  select"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," num frim a "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," num "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"in"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," num "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," b)")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])])])],-1),i("p",null,"​ 用下面语句进行替换：",-1),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," num frm a "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," exists"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}}," 1"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," b "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," num "),i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"="),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"a"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"num"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},")")]),e(`
`),i("span",{class:"line"}),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," t "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," num "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"in"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"("),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"1"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},","),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"2"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},","),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"3"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},")")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),a("<p>​ 对于连续的数值，能用between就不要用in，改写如下：</p><p>select id from t where num between 1 and 3。</p><ul><li><p>大事务会导致查询速度变慢，大事务是运行时间长，操作数据比较多的事务，因为事务具有acid的特性，所以大事务一旦开始执行时间就会很长。优化：将大事务分解成若干个事务，或是优化事务里面的sql语句。</p></li><li><p>where后面出现表达式或函数操作会导致查询速度下降，因为引擎放弃使用索引而进行全表查询。优化：将where后面的相关条件处理成常量等</p></li></ul><p>如</p><ul><li>where语句中对字段进行null判断会导致查询速度下降，否则将放弃使用索引而进行全表扫描。</li></ul><p>如：select id from where num is null</p><p>或可以建表时设置num列的默认值是0，确保表中num列没有null值，然后可以这么查询：</p><p>select id from t where num=0。这样不会放弃索引</p><p>2、 其他因素</p><p>（1）数据库服务器内存不足，cpu性能较弱，都会导致数据查询变慢。优化：设置配置更高的服务器</p><p>（2）不同的数据库类型会影响查询效率，如MySQL这种存储在磁盘的数据库，每次都要去读取磁盘的数据所以查询速度较慢、而redis数据库都是内存数据库，内存的读取速度比磁盘的会更快，所以redis在一定程度上来说查询速度更快</p><p>（3）网络速度慢会导致查询速度变慢，因为数据库的服务器往往跟访问的地方不同，距离越远、网络环境传输速度慢，传输时间越长。优化：减少数据库服务器与实际访问的距离、优化网络传输环境</p><p>（4）磁盘 IO性能突然下降、大量消耗磁盘性能的计划任务导致数据库的查询效率下降。解决：更快磁盘设备、调整计划任务、做好磁盘维护。</p>",13)]))}const p=l(n,[["render",k],["__file","index.html.vue"]]),c=JSON.parse(`{"path":"/article/55kekydm/","title":"影响数据库的查询效率以及优化","lang":"zh-CN","frontmatter":{"title":"影响数据库的查询效率以及优化","author":null,"createTime":"2024/11/09 21:44:23","permalink":"/article/55kekydm/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[],"isBlogPost":true,"readingTime":{"minutes":3.81,"words":1144},"git":{"updatedTime":1731917720000,"contributors":[{"name":"honghu","email":"3027708213@qq.com","commits":2}]},"filePathRelative":"影响数据库的查询效率以及优化.md","categoryList":[]}`);export{p as comp,c as data};
