import{_ as a,c as t,a as e,b as i,d as s,o as h}from"./app-CHQIiBnY.js";const k={};function d(n,l){return h(),t("div",null,l[0]||(l[0]=[e('<h1 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶"><span>进阶</span></a></h1><h2 id="cross-join" tabindex="-1"><a class="header-anchor" href="#cross-join"><span>cross join</span></a></h2><p><code>CROSS JOIN</code> 是一种简单的关联查询，不需要任何条件来匹配行，它直接将左表的 <strong>每一行</strong> 与右表的 <strong>每一行</strong> 进行组合，返回的结果是两个表的笛卡尔积。</p><p>如：有一个学生表 <code>student</code> ，包含以下字段：id（学号）、name（姓名）、age（年龄）、class_id（班级编号）；还有一个班级表 <code>class</code> ，包含以下字段：id（班级编号）、name（班级名称）。</p><p>请你编写一个 SQL 查询，将学生表和班级表的所有行组合在一起，并返回学生姓名（student_name）、学生年龄（student_age）、班级编号（class_id）以及班级名称（class_name）。</p>',5),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_name, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"age"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_age, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"class_id"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_name "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student s "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"cross join"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class c;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e('<h2 id="inner-join" tabindex="-1"><a class="header-anchor" href="#inner-join"><span>inner join</span></a></h2><p>在 SQL 中，INNER JOIN 是一种常见的关联查询方式，它根据两个表之间的关联条件，将满足条件的行组合在一起。</p><p>注意，INNER JOIN 只返回两个表中满足关联条件的交集部分，即在两个表中都存在的匹配行。</p><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>class_id</code>（班级编号）。还有一个班级表 <code>class</code>，包含以下字段：<code>id</code>（班级编号）、<code>name</code>（班级名称）、<code>level</code>（班级级别）。</p><p>请你编写一个 SQL 查询，根据学生表和班级表之间的班级编号进行匹配，返回学生姓名（<code>student_name</code>）、学生年龄（<code>student_age</code>）、班级编号（<code>class_id</code>）、班级名称（<code>class_name</code>）、班级级别（<code>class_level</code>）。</p>',5),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_name, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"age"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_age, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"class_id"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_name, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"level"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_level "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student s "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"join"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class c "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"on"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"class_id"),i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," ="),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"id"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e('<h2 id="outer-join" tabindex="-1"><a class="header-anchor" href="#outer-join"><span>outer join</span></a></h2><p>OUTER JOIN 是一种关联查询方式，它根据指定的关联条件，将两个表中满足条件的行组合在一起，并 <strong>包含没有匹配的行</strong> 。</p><p>在 OUTER JOIN 中，包括 LEFT OUTER JOIN 和 RIGHT OUTER JOIN 两种类型，它们分别表示查询左表和右表的所有行（即使没有被匹配），再加上满足条件的交集部分。</p><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>class_id</code>（班级编号）。还有一个班级表 <code>class</code>，包含以下字段：<code>id</code>（班级编号）、<code>name</code>（班级名称）、<code>level</code>（班级级别）。</p><p>请你编写一个 SQL 查询，根据学生表和班级表之间的班级编号进行匹配，返回学生姓名（<code>student_name</code>）、学生年龄（<code>student_age</code>）、班级编号（<code>class_id</code>）、班级名称（<code>class_name</code>）、班级级别（<code>class_level</code>），要求必须返回所有学生的信息（即使对应的班级编号不存在）。</p>',5),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_name, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"age"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_age, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"class_id"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_name, "),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"level"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_level "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student s "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"left join"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class c "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"on"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," s"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"class_id"),i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," ="),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," c"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"id"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e('<h2 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询"><span>子查询</span></a></h2><p>子查询是指在一个查询语句内部 <strong>嵌套</strong> 另一个完整的查询语句，内层查询被称为子查询。子查询可以用于获取更复杂的查询结果或者用于过滤数据。</p><p>当执行包含子查询的查询语句时，数据库引擎会首先执行子查询，然后将其结果作为条件或数据源来执行外层查询。</p><p>如：</p><p>有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。还有一个班级表 <code>class</code>，包含以下字段：<code>id</code>（班级编号）、<code>name</code>（班级名称）。</p><p>请你编写一个 SQL 查询，使用子查询的方式来获取存在对应班级的学生的所有数据，返回学生姓名（<code>name</code>）、分数（<code>score</code>）、班级编号（<code>class_id</code>）字段。</p>',6),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", score, class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"in"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select distinct"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class);")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e('<h2 id="exists" tabindex="-1"><a class="header-anchor" href="#exists"><span>exists</span></a></h2><p>子查询是一种强大的查询工具，它可以嵌套在主查询中，帮助我们进行更复杂的条件过滤和数据检索。</p><p>其中，子查询中的一种特殊类型是 &quot;exists&quot; 子查询，用于检查主查询的结果集是否存在满足条件的记录，它返回布尔值（True 或 False），而不返回实际的数据。</p><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。还有一个班级表 <code>class</code>，包含以下字段：<code>id</code>（班级编号）、<code>name</code>（班级名称）。</p><p>请你编写一个 SQL 查询，使用 exists 子查询的方式来获取 <strong>不存在对应班级的</strong> 学生的所有数据，返回学生姓名（<code>name</code>）、年龄（<code>age</code>）、班级编号（<code>class_id</code>）字段。</p>',5),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," not"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," exists"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"where"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," class"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"id"),i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," ="),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," student"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"."),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"class_id"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},");")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e('<h2 id="组合查询" tabindex="-1"><a class="header-anchor" href="#组合查询"><span>组合查询</span></a></h2><p>在 SQL 中，组合查询是一种将多个 SELECT 查询结果合并在一起的查询操作。</p><p>包括两种常见的组合查询操作：UNION 和 UNION ALL。</p><ol><li>UNION 操作：它用于将两个或多个查询的结果集合并， <strong>并去除重复的行</strong> 。即如果两个查询的结果有相同的行，则只保留一行。</li><li>UNION ALL 操作：它也用于将两个或多个查询的结果集合并， <strong>但不去除重复的行</strong> 。即如果两个查询的结果有相同的行，则全部保留。</li></ol><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。还有一个新学生表 <code>student_new</code>，包含的字段和学生表完全一致。</p><p>请编写一条 SQL 语句，获取所有学生表和新学生表的学生姓名（<code>name</code>）、年龄（<code>age</code>）、分数（<code>score</code>）、班级编号（<code>class_id</code>）字段，要求保留重复的学生记录。</p>',6),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"select"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"union all"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," select"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"from"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_new;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),i("h2",{id:"开窗函数-sum-over",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#开窗函数-sum-over"},[i("span",null,"开窗函数 - sum over")])],-1),i("p",null,[s("在 SQL 中，开窗函数是一种强大的查询工具，它允许我们在查询中进行对分组数据进行计算、 "),i("strong",null,"同时保留原始行的详细信息"),s(" 。")],-1),i("p",null,"开窗函数可以与聚合函数（如 SUM、AVG、COUNT 等）结合使用，但与普通聚合函数不同，开窗函数不会导致结果集的行数减少。",-1),i("p",null,'打个比方，可以将开窗函数想象成一种 "透视镜"，它能够将我们聚焦在某个特定的分组，同时还能看到整体的全景。',-1),i("p",null,"本节我们先讲第一个开窗函数：sum over。",-1),i("p",null,"该函数用法为：",-1),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"SUM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(计算字段名) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," 分组字段名)")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e("<p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。</p><p>请你编写一个 SQL 查询，返回每个学生的详细信息（字段顺序和原始表的字段顺序一致），并计算每个班级的学生平均分（class_avg_score）。</p>",2),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"SELECT"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id, "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id, "),i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"AVG"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(score) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_avg_score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"FROM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),i("h2",{id:"开窗函数-sum-over-order-by",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#开窗函数-sum-over-order-by"},[i("span",null,"开窗函数 - sum over order by")])],-1),i("p",null,"我们讲到了 sum over 开窗函数，并且用它实现了分组统计。",-1),i("p",null,[s("本节教程我们将学习 sum over 函数的另一种用法：sum over order by，可以实现同组内数据的 "),i("strong",null,"累加求和"),s(" 。")],-1),i("p",null,"示例用法如下：",-1),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"SUM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(计算字段名) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," 分组字段名 "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," 排序字段 排序规则)")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e("<p>举一个应用场景：老师在每个班级里依次点名，每点到一个学生，老师都会记录当前已点到的学生们的分数总和。</p><p>如：一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。</p><p>请你编写一个 SQL 查询，返回每个学生的详细信息（字段顺序和原始表的字段顺序一致），并且按照分数升序的方式累加计算每个班级的学生总分（class_sum_score）。</p>",3),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"SELECT"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id, "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id, "),i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"SUM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(score) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ASC"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_sum_score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"FROM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),i("h2",{id:"开窗函数-rank",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#开窗函数-rank"},[i("span",null,"开窗函数 - rank")])],-1),i("p",null,[s("Rank 开窗函数是 SQL 中一种用于对查询结果集中的行进行 "),i("strong",null,"排名"),s(" 的开窗函数。它可以根据指定的列或表达式对结果集中的行进行排序，并为每一行分配一个排名。在排名过程中，相同的值将被赋予相同的排名，而不同的值将被赋予不同的排名。")],-1),i("blockquote",null,[i("p",null,"当存在并列（相同排序值）时，Rank 会跳过后续排名，并保留相同的排名。")],-1),i("p",null,"Rank 开窗函数的常见用法是在查询结果中查找前几名（Top N）或排名最高的行。",-1),i("p",null,"Rank 开窗函数的语法如下：",-1),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"RANK"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"() "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," (")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"  PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," 列名1, 列名2, ... "),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"-- 可选，用于指定分组列")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"  ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," 列名3 [ASC|DESC], 列名4 [ASC|DESC], ... "),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"-- 用于指定排序列及排序方式")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," rank_column")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),e("<p>其中，<code>PARTITION BY</code> 子句可选，用于指定分组列，将结果集按照指定列进行分组；<code>ORDER BY</code> 子句用于指定排序列及排序方式，决定了计算 Rank 时的排序规则。<code>AS rank_column</code> 用于指定生成的 Rank 排名列的别名。</p><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。</p><p>请你编写一个 SQL 查询，返回每个学生的详细信息（字段顺序和原始表的字段顺序一致），并且按照分数降序的方式计算每个班级内的学生的分数排名（ranking）。</p>",3),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"SELECT"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id, "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id, "),i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"RANK"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"() "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"DESC"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ranking "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"FROM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),i("h2",{id:"开窗函数-row-number",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#开窗函数-row-number"},[i("span",null,"开窗函数 - row_number")])],-1),i("p",null,[s("Row_Number 开窗函数是 SQL 中的一种用于为查询结果集中的每一行 "),i("strong",null,"分配唯一连续排名"),s(" 的开窗函数。")],-1),i("p",null,"它与之前讲到的 Rank 函数，Row_Number 函数为每一行都分配一个唯一的整数值，不管是否存在并列（相同排序值）的情况。每一行都有一个唯一的行号，从 1 开始连续递增。",-1),i("p",null,"Row_Number 开窗函数的语法如下（几乎和 Rank 函数一模一样）：",-1),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"ROW_NUMBER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"() "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," (")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"  PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," column1, column2, ... "),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"-- 可选，用于指定分组列")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"  ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," column3 [ASC|DESC], column4 [ASC|DESC], ... "),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"-- 用于指定排序列及排序方式")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," row_number_column")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),e("<p>其中，<code>PARTITION BY</code>子句可选，用于指定分组列，将结果集按照指定列进行分组。<code>ORDER BY</code> 子句用于指定排序列及排序方式，决定了计算 Row_Number 时的排序规则。<code>AS row_number_column</code> 用于指定生成的行号列的别名。</p><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。</p><p>请你编写一个 SQL 查询，返回每个学生的详细信息（字段顺序和原始表的字段顺序一致），并且按照分数降序的方式给每个班级内的学生分配一个编号（row_number）。</p>",3),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"SELECT"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id, "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id, "),i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"ROW_NUMBER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"() "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"DESC"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," row_number "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"FROM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),i("h2",{id:"开窗函数-lag-lead",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#开窗函数-lag-lead"},[i("span",null,"开窗函数 - lag / lead")])],-1),i("p",null,"开窗函数 Lag 和 Lead 的作用是获取在当前行之前或之后的行的值，这两个函数通常在需要比较相邻行数据或进行时间序列分析时非常有用。",-1),i("p",null,"1）Lag 函数",-1),i("p",null,[s("Lag 函数用于获取 "),i("strong",null,"当前行之前"),s(" 的某一列的值。它可以帮助我们查看上一行的数据。")],-1),i("p",null,"Lag 函数的语法如下：",-1),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"LAG"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(column_name, offset, default_value) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," partition_column "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," sort_column)")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e("<p>参数解释：</p><ul><li><code>column_name</code>：要获取值的列名。</li><li><code>offset</code>：表示要向上偏移的行数。例如，offset为1表示获取上一行的值，offset为2表示获取上两行的值，以此类推。</li><li><code>default_value</code>：可选参数，用于指定当没有前一行时的默认值。</li><li><code>PARTITION BY</code>和<code>ORDER BY</code>子句可选，用于分组和排序数据。</li></ul><p>2）Lead 函数</p><p>Lead 函数用于获取 <strong>当前行之后</strong> 的某一列的值。它可以帮助我们查看下一行的数据。</p><p>Lead 函数的语法如下：</p>",5),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"LEAD"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(column_name, offset, default_value) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," partition_column "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," sort_column)")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),e("<p>参数解释：</p><ul><li><code>column_name</code>：要获取值的列名。</li><li><code>offset</code>：表示要向下偏移的行数。例如，offset为1表示获取下一行的值，offset为2表示获取下两行的值，以此类推。</li><li><code>default_value</code>：可选参数，用于指定当没有后一行时的默认值。</li><li><code>PARTITION BY</code>和<code>ORDER BY</code>子句可选，用于分组和排序数据。</li></ul><p><strong>示例</strong></p><p>以下是一个示例，假设我们有一个学生成绩表<code>scores</code>，其中包含学生的成绩和考试日期：</p><table><thead><tr><th>student_id</th><th>exam_date</th><th>score</th></tr></thead><tbody><tr><td>101</td><td>2023-01-01</td><td>85</td></tr><tr><td>101</td><td>2023-01-05</td><td>78</td></tr><tr><td>101</td><td>2023-01-10</td><td>92</td></tr><tr><td>101</td><td>2023-01-15</td><td>80</td></tr></tbody></table><p>现在我们想要查询每个学生的考试日期和上一次考试的成绩，以及下一次考试的成绩，示例 SQL 如下：</p>",6),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"SELECT"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"    student_id,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"    exam_date,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"    score,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"    LAG"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(score, "),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"1"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"NULL"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," exam_date) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," previous_score,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"    LEAD"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"(score, "),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"1"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"NULL"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," exam_date) "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," next_score")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"FROM")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"    scores;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),e("<p>结果将是：</p><table><thead><tr><th>student_id</th><th>exam_date</th><th>score</th><th>previous_score</th><th>next_score</th></tr></thead><tbody><tr><td>101</td><td>2023-01-01</td><td>85</td><td>NULL</td><td>78</td></tr><tr><td>101</td><td>2023-01-05</td><td>78</td><td>85</td><td>92</td></tr><tr><td>101</td><td>2023-01-10</td><td>92</td><td>78</td><td>80</td></tr><tr><td>101</td><td>2023-01-15</td><td>80</td><td>92</td><td>NULL</td></tr></tbody></table><p>在上面的示例中，我们使用 Lag 函数获取每个学生的上一次考试成绩（previous_score），使用 Lead 函数获取每个学生的下一次考试成绩（next_score）。如果没有上一次或下一次考试，对应的列将显示为 NULL。</p><p>如：有一个学生表 <code>student</code>，包含以下字段：<code>id</code>（学号）、<code>name</code>（姓名）、<code>age</code>（年龄）、<code>score</code>（分数）、<code>class_id</code>（班级编号）。</p><p>请你编写一个 SQL 查询，返回每个学生的详细信息（字段顺序和原始表的字段顺序一致），并且按照分数降序的方式获取每个班级内的学生的前一名学生姓名（prev_name）、后一名学生姓名（next_name）。</p>",5),i("div",{class:"language-sql line-numbers-mode","data-ext":"sql","data-title":"sql"},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"SELECT"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," id, "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},", age, score, class_id, "),i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"LAG"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"over"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"DESC"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"as"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," prev_name, "),i("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"LEAD"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"name"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"OVER"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," ("),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"PARTITION"),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," class_id "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"ORDER BY"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," score "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"DESC"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},") "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"AS"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," next_name "),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"FROM"),i("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," student;")])])]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1)]))}const c=a(k,[["render",d],["__file","index.html.vue"]]),p=JSON.parse(`{"path":"/article/9ytk6ejg/","title":"sql进阶","lang":"zh-CN","frontmatter":{"title":"sql进阶","author":null,"createTime":"2024/06/04 11:32:19","permalink":"/article/9ytk6ejg/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"cross join","slug":"cross-join","link":"#cross-join","children":[]},{"level":2,"title":"inner join","slug":"inner-join","link":"#inner-join","children":[]},{"level":2,"title":"outer join","slug":"outer-join","link":"#outer-join","children":[]},{"level":2,"title":"子查询","slug":"子查询","link":"#子查询","children":[]},{"level":2,"title":"exists","slug":"exists","link":"#exists","children":[]},{"level":2,"title":"组合查询","slug":"组合查询","link":"#组合查询","children":[]},{"level":2,"title":"开窗函数 - sum over","slug":"开窗函数-sum-over","link":"#开窗函数-sum-over","children":[]},{"level":2,"title":"开窗函数 - sum over order by","slug":"开窗函数-sum-over-order-by","link":"#开窗函数-sum-over-order-by","children":[]},{"level":2,"title":"开窗函数 - rank","slug":"开窗函数-rank","link":"#开窗函数-rank","children":[]},{"level":2,"title":"开窗函数 - row_number","slug":"开窗函数-row-number","link":"#开窗函数-row-number","children":[]},{"level":2,"title":"开窗函数 - lag / lead","slug":"开窗函数-lag-lead","link":"#开窗函数-lag-lead","children":[]}],"isBlogPost":true,"readingTime":{"minutes":11.41,"words":3423},"git":{"updatedTime":1717479581000,"contributors":[{"name":"hongzidan","email":"3027708213@qq.com","commits":1}]},"filePathRelative":"sql进阶.md","categoryList":[]}`);export{c as comp,p as data};
