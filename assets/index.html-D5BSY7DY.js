import{_ as a,c as n,a as t,o as i}from"./app-CHQIiBnY.js";const r={};function l(o,e){return i(),n("div",null,e[0]||(e[0]=[t('<p>Spring 中主要是通过<strong>三级缓存</strong>来处理循环依赖，这个三级缓存也可以视为 3 个 Map，其中：</p><ul><li>一级缓存：存储完整的 Bean</li><li>二级缓存：存储早期暴露的 Bean 实例，这些实例已经实例化但尚未初始化（包括属性填充和初始化方法调用）。</li><li>三级缓存：存储 Bean 的对象工厂</li></ul><p>首先需要了解 Bean 的生命周期，其大致分为以下 4 个步骤：</p><hr><p>1、实例化 Bean --&gt; 2、属性注入 --&gt; 3、初始化 Bean --&gt; 4、使用 --&gt; 5、销毁 Bean</p><hr><p>其次循环依赖就是：</p><hr><p>​ Bean A 依赖 Bean B，Bean B 又依赖 Bean A，创建 Bean A 的时候会先实例化 Bean A也就是new A()，然后在进行属性填充的时候发现 A 依赖 B，那么再去创建 Bean B，先实例化，在其属性注入时发现其依赖 Bean A，从此进入循环。</p><hr><p>引入三级缓存后解决循环依赖的思路如下：</p><ol><li><p>当 Spring 容器创建 Bean A 时，会先将 A 的对象工厂放入三级缓存</p></li><li><p>当 A 需要注入 B 时，容器会尝试创建 B。同样地，B 的对象工厂也会被放入三级缓存。</p></li><li><p>当 B 需要注入 A 时（循环依赖发生），容器会首先在一级缓存中查找 A，未找到后会去二级缓存查找，再未找到则去三级缓存中通过工厂对象创建 A 的早期引用（此时 A 尚未初始化），然后将这个早期引用放入二级缓存，并从三级缓存中移除工厂对象。</p></li><li><p>B 完成属性注入和初始化后，会被放入一级缓存。</p></li><li><p>回到 A 的创建流程，此时 A 可以从一级缓存中获取到 B 的完全初始化对象进行注入，然后 A 完成初始化并放入一级缓存。</p></li></ol><p>以上便解决了循环依赖。</p><h3 id="aop-的影响" tabindex="-1"><a class="header-anchor" href="#aop-的影响"><span><strong>AOP 的影响</strong></span></a></h3><p>实际上如果没有使用到 AOP（面向切面编程）的话，两层缓存就可以解决循环依赖问题，但是 AOP 是 Spring 一个很重要的特性，不可以不考虑到，像 Bean A 需要用到 AOP 的话，实际上 Bean B 依赖的是 <strong>Bean A 的代理对象</strong>，存入一级缓存的也<strong>只有</strong> Bean A 的代理对象</p><ul><li>当使用 AOP 时，创建的 Bean 可能是其代理对象。这意味着即使 B 注入的是 A 的早期引用，这个引用也可能是一个代理对象（如果 A 需要被代理）。</li><li>在这种情况下，从三级缓存中通过工厂对象创建的是 A 的代理对象的早期引用，这个引用在初始化阶段会被增强（如添加切面逻辑），最终成为完全初始化的代理对象并放入一级缓存。</li></ul>',16)]))}const s=a(r,[["render",l],["__file","index.html.vue"]]),c=JSON.parse(`{"path":"/study/7oznzr16/","title":"010、Spring 如何处理循环依赖？","lang":"zh-CN","frontmatter":{"title":"010、Spring 如何处理循环依赖？","author":null,"createTime":"2025/02/26 23:46:30","permalink":"/study/7oznzr16/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":3,"title":"AOP 的影响","slug":"aop-的影响","link":"#aop-的影响","children":[]}],"readingTime":{"minutes":2.49,"words":747},"git":{"updatedTime":1740622614000,"contributors":[{"name":"洪子丹","email":"302778213@qq.com","commits":1}]},"filePathRelative":"notes/study/recite/010、Spring 如何处理循环依赖？.md"}`);export{s as comp,c as data};
